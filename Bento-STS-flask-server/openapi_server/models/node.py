# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Node(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, handle=None, model=None):  # noqa: E501
        """Node - a model defined in OpenAPI

        :param id: The id of this Node.  # noqa: E501
        :type id: str
        :param handle: The handle of this Node.  # noqa: E501
        :type handle: str
        :param model: The model of this Node.  # noqa: E501
        :type model: str
        """
        self.openapi_types = {
            'id': str,
            'handle': str,
            'model': str
        }

        self.attribute_map = {
            'id': 'id',
            'handle': 'handle',
            'model': 'model'
        }

        self._id = id
        self._handle = handle
        self._model = model

    @classmethod
    def from_dict(cls, dikt) -> 'Node':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Node of this Node.  # noqa: E501
        :rtype: Node
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Node.


        :return: The id of this Node.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Node.


        :param id: The id of this Node.
        :type id: str
        """

        self._id = id

    @property
    def handle(self):
        """Gets the handle of this Node.


        :return: The handle of this Node.
        :rtype: str
        """
        return self._handle

    @handle.setter
    def handle(self, handle):
        """Sets the handle of this Node.


        :param handle: The handle of this Node.
        :type handle: str
        """

        self._handle = handle

    @property
    def model(self):
        """Gets the model of this Node.


        :return: The model of this Node.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this Node.


        :param model: The model of this Node.
        :type model: str
        """

        self._model = model
