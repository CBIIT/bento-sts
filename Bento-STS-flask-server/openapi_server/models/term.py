# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Term(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, value=None, origin_definition=None, origin_id=None):  # noqa: E501
        """Term - a model defined in OpenAPI

        :param id: The id of this Term.  # noqa: E501
        :type id: str
        :param value: The value of this Term.  # noqa: E501
        :type value: str
        :param origin_definition: The origin_definition of this Term.  # noqa: E501
        :type origin_definition: str
        :param origin_id: The origin_id of this Term.  # noqa: E501
        :type origin_id: str
        """
        self.openapi_types = {
            'id': str,
            'value': str,
            'origin_definition': str,
            'origin_id': str
        }

        self.attribute_map = {
            'id': 'id',
            'value': 'value',
            'origin_definition': 'origin_definition',
            'origin_id': 'origin_id'
        }

        self._id = id
        self._value = value
        self._origin_definition = origin_definition
        self._origin_id = origin_id

    @classmethod
    def from_dict(cls, dikt) -> 'Term':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Term of this Term.  # noqa: E501
        :rtype: Term
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Term.


        :return: The id of this Term.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Term.


        :param id: The id of this Term.
        :type id: str
        """

        self._id = id

    @property
    def value(self):
        """Gets the value of this Term.


        :return: The value of this Term.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Term.


        :param value: The value of this Term.
        :type value: str
        """

        self._value = value

    @property
    def origin_definition(self):
        """Gets the origin_definition of this Term.


        :return: The origin_definition of this Term.
        :rtype: str
        """
        return self._origin_definition

    @origin_definition.setter
    def origin_definition(self, origin_definition):
        """Sets the origin_definition of this Term.


        :param origin_definition: The origin_definition of this Term.
        :type origin_definition: str
        """

        self._origin_definition = origin_definition

    @property
    def origin_id(self):
        """Gets the origin_id of this Term.


        :return: The origin_id of this Term.
        :rtype: str
        """
        return self._origin_id

    @origin_id.setter
    def origin_id(self, origin_id):
        """Sets the origin_id of this Term.


        :param origin_id: The origin_id of this Term.
        :type origin_id: str
        """

        self._origin_id = origin_id
